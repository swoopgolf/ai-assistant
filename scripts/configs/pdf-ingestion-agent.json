{
  "agent_name": "pdf-ingestion-agent",
  "description": "Specialized agent for extracting menu items and data from PDF documents, processing unstructured content, and inserting new items into the database",
  "port": 10350,
  "author_name": "Club Management System",
  "author_email": "dev@clubmanagement.com", 
  "capabilities": [
    "pdf_text_extraction",
    "ocr_processing",
    "menu_item_parsing",
    "structured_data_extraction",
    "document_analysis",
    "data_validation",
    "bulk_item_insertion",
    "format_detection",
    "import_reporting"
  ],
  "tools": [
    {
      "name": "extract_text_from_pdf",
      "description": "Extract raw text content from a PDF document",
      "parameters": {
        "pdf_path": {"type": "string", "description": "Path to the PDF file or URL"},
        "pages": {"type": "string", "description": "Page range to extract (e.g., '1-5', 'all')", "default": "all"},
        "use_ocr": {"type": "boolean", "description": "Use OCR for scanned documents", "default": false}
      },
      "returns": "Extracted text content organized by pages"
    },
    {
      "name": "parse_menu_items",
      "description": "Parse extracted text to identify menu items with prices and descriptions",
      "parameters": {
        "text_content": {"type": "string", "description": "Raw text content from PDF"},
        "format_hint": {"type": "string", "description": "Format hint ('structured', 'free-form', 'table')", "required": false},
        "currency_symbol": {"type": "string", "description": "Currency symbol to look for", "default": "$"}
      },
      "returns": "List of parsed menu items with names, prices, descriptions, and categories"
    },
    {
      "name": "validate_extracted_items",
      "description": "Validate and clean extracted menu item data",
      "parameters": {
        "items": {"type": "array", "description": "Array of extracted menu items"},
        "check_duplicates": {"type": "boolean", "description": "Check for duplicate items", "default": true},
        "validate_prices": {"type": "boolean", "description": "Validate price formatting", "default": true}
      },
      "returns": "Validated and cleaned menu items with validation report"
    },
    {
      "name": "categorize_items",
      "description": "Automatically categorize menu items based on names and descriptions",
      "parameters": {
        "items": {"type": "array", "description": "Array of menu items to categorize"},
        "existing_categories": {"type": "array", "description": "List of existing menu categories", "required": false}
      },
      "returns": "Items with assigned categories"
    },
    {
      "name": "insert_menu_items",
      "description": "Insert validated menu items into the database",
      "parameters": {
        "items": {"type": "array", "description": "Array of validated menu items"},
        "club_id": {"type": "integer", "description": "Club ID for the menu"},
        "duplicate_action": {"type": "string", "description": "Action for duplicates ('skip', 'update', 'error')", "default": "skip"},
        "dry_run": {"type": "boolean", "description": "Only validate without inserting", "default": false}
      },
      "returns": "Import results with success/failure counts and details"
    },
    {
      "name": "analyze_document_structure",
      "description": "Analyze PDF structure to determine the best extraction approach",
      "parameters": {
        "pdf_path": {"type": "string", "description": "Path to the PDF file"},
        "detect_tables": {"type": "boolean", "description": "Detect table structures", "default": true}
      },
      "returns": "Document analysis with structure information and extraction recommendations"
    },
    {
      "name": "extract_images_from_pdf",
      "description": "Extract images from PDF for OCR processing",
      "parameters": {
        "pdf_path": {"type": "string", "description": "Path to the PDF file"},
        "image_format": {"type": "string", "description": "Output image format", "default": "png"}
      },
      "returns": "List of extracted image paths for OCR processing"
    },
    {
      "name": "generate_import_report",
      "description": "Generate a detailed report of the import process",
      "parameters": {
        "import_results": {"type": "object", "description": "Results from the import operation"},
        "include_summary": {"type": "boolean", "description": "Include summary statistics", "default": true}
      },
      "returns": "Formatted import report with statistics and details"
    }
  ],
  "database_schema": {
    "tables": {
      "menu_items": {
        "description": "Target table for inserting extracted menu items",
        "columns": {
          "id": {"type": "INTEGER", "description": "Primary key", "constraints": ["AUTO_INCREMENT"]},
          "name": {"type": "VARCHAR(255)", "description": "Item name", "constraints": ["NOT NULL", "UNIQUE"]},
          "description": {"type": "TEXT", "description": "Item description and ingredients"},
          "price": {"type": "DECIMAL(10,2)", "description": "Item price", "constraints": ["NOT NULL", "CHECK (price > 0)"]},
          "category": {"type": "VARCHAR(100)", "description": "Menu category"},
          "is_available": {"type": "BOOLEAN", "description": "Availability status", "default": true},
          "club_id": {"type": "INTEGER", "description": "Club ID", "constraints": ["NOT NULL"]},
          "source": {"type": "VARCHAR(255)", "description": "Source document name"},
          "imported_at": {"type": "TIMESTAMP", "description": "When item was imported"},
          "imported_by": {"type": "VARCHAR(100)", "description": "Agent that imported the item"}
        }
      },
      "import_log": {
        "description": "Log table for tracking PDF import operations",
        "columns": {
          "id": {"type": "INTEGER", "description": "Log entry ID"},
          "document_name": {"type": "VARCHAR(255)", "description": "Name of imported document"},
          "document_path": {"type": "TEXT", "description": "Path to source document"},
          "items_found": {"type": "INTEGER", "description": "Number of items found in document"},
          "items_imported": {"type": "INTEGER", "description": "Number of items successfully imported"},
          "items_skipped": {"type": "INTEGER", "description": "Number of items skipped (duplicates)"},
          "items_failed": {"type": "INTEGER", "description": "Number of items that failed validation"},
          "import_status": {"type": "VARCHAR(50)", "description": "Overall import status"},
          "error_details": {"type": "JSON", "description": "Details of any errors encountered"},
          "imported_at": {"type": "TIMESTAMP", "description": "When import was performed"},
          "club_id": {"type": "INTEGER", "description": "Club ID for the import"}
        }
      }
    }
  },
  "dependencies": {
    "required": [
      "psycopg2-binary>=2.9.0",
      "sqlalchemy>=2.0.0",
      "pydantic>=2.0.0",
      "PyPDF2>=3.0.0",
      "pdfplumber>=0.9.0",
      "python-dateutil>=2.8.0"
    ],
    "optional": [
      "pytesseract>=0.3.10",
      "Pillow>=10.0.0",
      "opencv-python>=4.8.0",
      "tabula-py>=2.8.0",
      "camelot-py>=0.11.0"
    ]
  },
  "environment_variables": {
    "required": {
      "DB_HOST": {"description": "PostgreSQL host", "default": "34.83.218.41"},
      "DB_PORT": {"description": "PostgreSQL port", "default": "5432"},
      "DB_NAME": {"description": "Database name", "default": "byrdi"},
      "DB_USER": {"description": "Database username"},
      "DB_PASSWORD": {"description": "Database password"}
    },
    "optional": {
      "TESSERACT_PATH": {"description": "Path to Tesseract OCR executable"},
      "TEMP_DIR": {"description": "Directory for temporary files", "default": "/tmp"},
      "MAX_FILE_SIZE_MB": {"description": "Maximum PDF file size in MB", "default": "50"},
      "OCR_LANGUAGES": {"description": "OCR languages to use", "default": "eng"}
    }
  },
  "custom_prompts": {
    "system_prompt": "You are a document processing specialist that extracts menu information from PDF documents. You can handle both text-based and scanned PDFs. Always validate extracted data for accuracy and completeness. When uncertain about item details, flag them for manual review. Focus on extracting item names, prices, descriptions, and categories accurately.",
    "extraction_prompt": "When extracting menu items from text:\n1. Look for patterns: Item Name - Description - Price\n2. Identify currency symbols and price formats\n3. Group related items by section headers\n4. Handle special characters and formatting\n5. Extract allergen and dietary information when present",
    "validation_prompt": "Validate extracted items for:\n1. Reasonable price ranges ($1-$100 typically)\n2. Complete item names (not just fragments)\n3. Proper price formatting (2 decimal places)\n4. Category assignment accuracy\n5. No duplicate items unless intentional",
    "error_handling": "When extraction fails or is uncertain:\n1. Provide detailed error messages\n2. Suggest manual review for unclear items\n3. Offer alternative extraction methods\n4. Log all issues for debugging\n5. Continue processing other items when possible"
  },
  "security_config": {
    "file_validation": {
      "allowed_extensions": [".pdf"],
      "max_file_size_mb": 50,
      "scan_for_malware": false,
      "quarantine_suspicious": true
    },
    "database_access": "read_write",
    "allowed_operations": ["SELECT", "INSERT", "UPDATE"],
    "data_validation": {
      "require_price": true,
      "require_name": true,
      "max_description_length": 1000,
      "validate_price_range": true
    },
    "audit_requirements": {
      "log_all_imports": true,
      "track_source_documents": true,
      "maintain_import_history": true
    }
  },
  "extraction_config": {
    "text_extraction": {
      "preserve_formatting": true,
      "extract_tables": true,
      "handle_multi_column": true,
      "merge_hyphenated_words": true
    },
    "ocr_settings": {
      "dpi": 300,
      "preserve_interword_spaces": true,
      "psm_mode": 6,
      "languages": ["eng"]
    },
    "parsing_rules": {
      "price_patterns": [
        "\\$\\d+\\.\\d{2}",
        "\\$\\d+",
        "\\d+\\.\\d{2}\\s*dollars?",
        "USD\\s*\\d+\\.\\d{2}"
      ],
      "category_keywords": {
        "appetizers": ["appetizer", "starter", "small plate", "shareables"],
        "entrees": ["entree", "main", "dinner", "lunch"],
        "beverages": ["drink", "beverage", "coffee", "tea", "soda", "beer", "wine"],
        "desserts": ["dessert", "sweet", "cake", "pie", "ice cream"]
      },
      "dietary_keywords": {
        "vegetarian": ["vegetarian", "veggie", "v"],
        "vegan": ["vegan", "ve"],
        "gluten-free": ["gluten-free", "gf", "gluten free"],
        "dairy-free": ["dairy-free", "df", "dairy free"]
      }
    }
  },
  "performance_config": {
    "processing": {
      "batch_size": 100,
      "parallel_processing": false,
      "cache_extracted_text": true,
      "timeout_seconds": 300
    },
    "memory_management": {
      "max_memory_usage_mb": 1024,
      "cleanup_temp_files": true,
      "stream_large_files": true
    }
  },
  "example_interactions": [
    {
      "user_input": "Here's a PDF of our new summer menu, please add these items",
      "expected_flow": [
        {"tool": "analyze_document_structure", "description": "Analyze PDF structure"},
        {"tool": "extract_text_from_pdf", "description": "Extract text content"},
        {"tool": "parse_menu_items", "description": "Parse items from text"},
        {"tool": "validate_extracted_items", "description": "Validate data"},
        {"tool": "categorize_items", "description": "Assign categories"},
        {"tool": "insert_menu_items", "description": "Insert into database"}
      ],
      "sample_response": "I've processed the summer menu PDF and found 23 new items. Successfully imported 21 items including 8 appetizers, 7 entrees, 4 beverages, and 2 desserts. Two items were flagged for manual review due to unclear pricing. All items are now available in your menu system."
    },
    {
      "user_input": "Extract menu items from this supplier document but don't add them yet",
      "expected_tool": "parse_menu_items",
      "expected_params": {"dry_run": true},
      "sample_response": "I've extracted 15 potential menu items from the supplier document:\n- Artisan Pizza ($18.95)\n- Gourmet Burger ($16.50)\n- Caesar Salad ($12.95)\n...\n\nAll items have been validated and categorized. Would you like me to proceed with importing them to your menu?"
    },
    {
      "user_input": "This PDF is a scanned document, can you still process it?",
      "expected_tool": "extract_text_from_pdf",
      "expected_params": {"use_ocr": true},
      "sample_response": "Yes, I can process scanned PDFs using OCR technology. I'll extract the images from the PDF and convert them to text. This may take a bit longer than regular text extraction, but I'll be able to identify the menu items and their details."
    }
  ]
} 